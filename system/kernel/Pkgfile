version=3.18.1
PKGMK_IGNORE_UNPACK="yes"
PKGMK_NO_STRIP="yes"


source=(http://www.kernel.org/pub/linux/kernel/v3.x/linux-${version}.tar.xz kernel.config kernel.config_64)

_version=$version

build(){

if [ -d /usr/src/linux-${_version} ]; then
	ln -s  /usr/src/linux-${_version} linux-${_version}
	if [ -f $SRC/patch-$version.bz2 ]; then
		cd linux-${_version}
		bzip2 -d -c  $SRC/patch-$version.bz2 | patch -Np1
		cd $SRC 
	fi
else

	bsdtar -p -o -C $SRC -xf linux-${version}.tar.xz
fi

cd linux-${_version}

if ! [ -d /usr/src/linux-${_version} ]; then
	make mrproper
	case `uname -m` in
        	x86_64)
        		cp $SRC/kernel.config_64 ./.config;;
        	i?86)
        		cp $SRC/kernel.config ./.config;;
	esac

make menuconfig
fi
make || make -j1

case `uname -m` in
        x86_64)
                cp .config $SRC/kernel.config_64;;
        i?86)
                cp .config $SRC/kernel.config;;
esac

# Install modules
cd $SRC/linux-${version}
sed -i "/rm\ -rf\ \$(MODLIB)\/kernel/d" Makefile
make INSTALL_MOD_PATH=$PKG modules_install || make -j1 INSTALL_MOD_PATH=$PKG modules_install
mkdir -p $PKG/boot
case `uname -m` in
        x86_64)
                cp  System.map \
                $PKG/boot/System_64.map-$version
                cp  .config    \
                $PKG/boot/config_64-$version
                cp  arch/x86_64/boot/bzImage \
                $PKG/boot/kernel-$version ;;
        i?86)
                cp  System.map \
                $PKG/boot/System.map-$version
                cp  .config \
                $PKG/boot/config-$version
                cp  arch/i386/boot/bzImage \
                $PKG/boot/kernel-$version ;;
esac
ln -sf kernel-$version $PKG/boot/kernel
cd $PKG/lib/modules/${_version}/
rm -f {build,source}
ln -sv /usr/src/linux-${_version} build
ln -sv /usr/src/linux-${_version} source

# Firmware are in linux-firmware
rm -rf $PKG/lib/firmware
}
